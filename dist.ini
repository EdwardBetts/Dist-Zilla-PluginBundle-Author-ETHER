name                = Dist-Zilla-PluginBundle-Author-ETHER
author              = Karen Etheridge <ether@cpan.org>
copyright_holder    = Karen Etheridge
copyright_year      = 2013
license             = Perl_5

;;; VersionProvider
; use V= to override; otherwise version is incremented from last tag
[Git::NextVersion]
version_regexp = ^v([\d._]+)(-TRIAL)?$


;;; MetaData
[GithubMeta]
[AutoMetaResources]
bugtracker.rt = 1

[Authority]
authority = cpan:ETHER

[MetaNoIndex]
directory = t
directory = xt
directory = examples

[MetaProvides::Package]
meta_noindex = 1

[MetaConfig]
;[ContributorsFromGit]


;;; ExecFiles, ShareDir
[ExecDir]
[ShareDir]
[ModuleShareDirs]
Dist::Zilla::MintingProfile::Author::ETHER = profiles


;;; Gather Files
[Git::GatherDir]
exclude_filename = LICENSE
include_dotfiles = 1

[MetaYAML]
[MetaJSON]
[License]
[Readme]
[Manifest]

[GatherDir::Template / profile.ini]
root   = profiles/github/build_templates
prefix = profiles/github

[Test::Compile]
fail_on_warning = 1
bail_out_on_fail = 1

[Test::CheckDeps]
:version = 0.005
fatal = 1

[NoTabsTests]
[EOLTests]
[MetaTests]
[Test::CPAN::Changes]
[Test::ChangesHasContent]
;[Test::Version]        needs to be able to ignore Module.pm in profiles/
;[Test::Kwalitee]
;[Test::Kwalitee::Extra]

[Test::MinimumVersion]
:version = 2.000003
max_target_perl = 5.008008

[PodSyntaxTests]
;[PodCoverageTests]     cannot run against a module sharedir
[Test::PodSpelling]
stopwords = Stopwords

;[Test::Pod::LinkCheck]     many outstanding bugs
;[Test::Pod::No404s]    does not like templated URLs


;;; Prune Files
[PruneCruft]
[ManifestSkip]
; (ReadmeAnyFromPod)


;;; Munge Files
; (Authority)
[Git::Describe]
[PkgVersion]
[PodWeaver]
;[%PodWeaver]           TODO
[NextRelease]
:version = 4.300018
format = %-8V  %{yyyy-MM-dd HH:mm:ss ZZZZ}d (%U)


;;; Register Prereqs
[AutoPrereqs]
[MinimumPerl]


;;; Install Tool
[ReadmeAnyFromPod]
type = markdown
filename = README.md
location = root

[MakeMaker]
[InstallGuide]


;;; After Build
[CopyFilesFromBuild]
copy = LICENSE


;;; TestRunner
[RunExtraTests]


;;; Before Release
[Git::Check]
allow_dirty = README.md
allow_dirty = LICENSE

[Git::CheckFor::MergeConflicts]

[Git::CheckFor::CorrectBranch]
:version = 0.004
release_branch = master

[Git::Remote::Check]
remote_branch = master

[CheckPrereqsIndexed]
[TestRelease]
;(ConfirmRelease)


;;; Releaser
[UploadToCPAN]


;;; AfterRelease
[Git::Commit]
allow_dirty = Changes
allow_dirty = README.md
allow_dirty = LICENSE
commit_msg = %N-%v%t%n%n%c

[Git::Tag]
tag_format = v%v%t
tag_message = v%v%t

[Git::Push]

[InstallRelease]
install_command = cpanm .


; listed late, to allow all other plugins which do BeforeRelease checks to run first.
[ConfirmRelease]
